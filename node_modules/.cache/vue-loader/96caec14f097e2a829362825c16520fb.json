{"remainingRequest":"/home/runner/work/U1_Administracion_Salarios/U1_Administracion_Salarios/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U1_Administracion_Salarios/U1_Administracion_Salarios/src/views/Introduccion.vue?vue&type=template&id=71f593aa&lang=pug&","dependencies":[{"path":"/home/runner/work/U1_Administracion_Salarios/U1_Administracion_Salarios/src/views/Introduccion.vue","mtime":1740360178011},{"path":"/home/runner/work/U1_Administracion_Salarios/U1_Administracion_Salarios/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Administracion_Salarios/U1_Administracion_Salarios/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U1_Administracion_Salarios/U1_Administracion_Salarios/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U1_Administracion_Salarios/U1_Administracion_Salarios/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Administracion_Salarios/U1_Administracion_Salarios/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}